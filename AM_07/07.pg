##################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;
$showHint = 1;

##################
#  Setup

Context("Matrix");

$A = Matrix([
[random(-3,3,1),random(-3,2,1)],
[random(-3,2,1),random(-3,4,1)]
]);

$B = Matrix([
[non_zero_random(-3,3),random(0,2,1)],
[non_zero_random(-3,3),random(0,2,1)]
]);

$AA = Matrix([[4,2],[-2,6]]);

$BB = Matrix([[1,3],[-5,7]]);

$answer = $A * $B;
$answerr = $AA * $BB;


##################
#  Main text

BEGIN_PGML

## Součin dvou matic

Součin matic [`A`] a [`B`] je možno chápat jako skupinu součinů první matice a sloupcových vektorů vytvořených sloupci druhé matice. Jednotlivé sloupcové vektory, které takto dostaneme, potom tvoří sloupce výsledné matice. Například součin matic
[```\begin{pmatrix}4&2\\-2&6\end{pmatrix}\begin{pmatrix}1&3\\-5&7\end{pmatrix} ```]
je možno chápat jako součiny 
[```\begin{pmatrix}4&2\\-2&6\end{pmatrix}\begin{pmatrix}1\\-5\end{pmatrix}=
\begin{pmatrix}4\\-2\end{pmatrix}-5\begin{pmatrix}2\\6\end{pmatrix}=
\begin{pmatrix}-6\\-32\end{pmatrix} ```]
a
[```\begin{pmatrix}4&2\\-2&6\end{pmatrix}\begin{pmatrix}3\\7\end{pmatrix}=
3\begin{pmatrix}4\\-2\end{pmatrix}+7\begin{pmatrix}2\\6\end{pmatrix}=
\begin{pmatrix}26\\36\end{pmatrix}. ```]
Proto platí
[```\begin{pmatrix}4&2\\-2&6\end{pmatrix}\begin{pmatrix}1&3\\-5&7\end{pmatrix}=\begin{pmatrix}-6&26\\-32&36\end{pmatrix}, ```]
jak nám potvrdí například i MATLAB nebo [@ htmlLink("https://sagecell.sagemath.org/?z=eJxztI02UTCyVtA1UjCL5eVyso02VDAGck0VzIFcRy0nAHGXBnc=&lang=octave&interacts=eJyLjgUAARUAuQ==","Octave")@]*. (Uvedené výpočetní nástroje použijte jenom v krajní nouzi. Raději si na předchozím příkladu ještě jednou prohlédněte, která matice je zdrojem vektorů do lineárních kombinací, která matice obsahuje koeficienty do lineárních kombinací a jak sestavíme výsledek. Aby se vám lépe hledalo, je první matice sestavena ze sudých a druhá z lichých čísel.)

Následující příklad je podobného typu, opět násobíme dvě čtvercové [`2\times 2`] matice. Opět jsou v tomto součinu schovány dvě lineární kombinace sloupců první matice, přičemž koeficienty této lineární kombinace jsou ve sloupcích druhé matice. Díky použitému programu jsou matice ohraničeny hranatými závorkami namísto kulatých, to však na naše počítání nebude mít vliv.

---------------

Jsou dány matice [```A=[$A]\text{ a }B=[$B].```]
Součin těchto matic je 
>>[`` A B = {}``][_____]*{$answer}.<<
END_PGML


########################
#  Solution

BEGIN_PGML_HINT
Musíme vypočítat lineární kombinace sloupců matice [`A`]. Koeficienty do této lienární kombinace najdeme ve sloupcích matice [`B`]: dva sloupce s koeficienty pro dvě lineární kombinace.

Výsledek je matice tvořená sloupci 
[``` [$B->element(1,1)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)]\end{pmatrix}
+
([$B->element(2,1)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)]\end{pmatrix}
=\cdots
```]
a
[``` [$B->element(1,2)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)]\end{pmatrix}
+
([$B->element(2,2)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)]\end{pmatrix}
=\cdots
```]
END_PGML_HINT


BEGIN_PGML_SOLUTION
Musíme vypočítat lineární kombinace sloupců matice [`A`]. Koeficienty do této lienární kombinace najdeme ve sloupcích matice [`B`]: dva sloupce s koeficienty pro dvě lineární kombinace.

Výsledek je [```AB=[$answer],```]
protože
[``` [$B->element(1,1)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)]\end{pmatrix}
+
([$B->element(2,1)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)]\end{pmatrix}
=
\begin{pmatrix}[$answer->element(1,1)] \\ [$answer->element(2,1)]\end{pmatrix}
```]
a
[``` [$B->element(1,2)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)]\end{pmatrix}
+
([$B->element(2,2)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)]\end{pmatrix}
=
\begin{pmatrix}[$answer->element(1,2)] \\ [$answer->element(2,2)]\end{pmatrix}
```]

END_PGML_SOLUTION


COMMENT('Uses PGML.');

ENDDOCUMENT();

