DOCUMENT(); 
loadMacros(
"PGstandard.pl",
"PGML.pl",
"MathObjects.pl",
"answerHints.pl",
"PGcourse.pl",
);
TEXT(beginproblem());

$showPartialCorrectAnswers = 1;
$showHint = 1;

Context("Numeric")->variables->are('k'=>'Real', 'r'=>'Real', 'l'=>'Real', 'T'=>'Real','t'=>'Real');

$T0=random(8,15,1);

$r1=Formula("-k*(T-[$T0])");


BEGIN_PGML

## Speedcubing

[@ image("rubik.jpg", width=>400) @]*

Umíte složit Rubikovu kostku? Odborník odhaduje na základě stáří, obecné zručnosti a fyziologických možností konkrétního člověka, že jeho limit je skládat kostku za [``[$T0]``] sekund. Tréninkem je možno se k této metě může přibližovat. Konstantním tréninkem klesá doba [`T`] nutná ke složení kostky rychlostí úměrnou času, o kolik skládáme pomaleji než je hranice možností, v tomto případě [`[$T0]`] sekund.

Napište matematický model popisující danou situaci. Konstantu úměrnosti označte [`k`]. Model formulujte tak, aby konstanta úměrnosti byla kladná.
>> [``\frac{\mathrm dT}{\mathrm dt}=``][__________]{$r1->cmp()->withPostFilter(AnswerHints(
Formula("k*(T-[$T0])") => "Jste na dobré cestě. Až na znaménko.",
))}<<

END_PGML

BEGIN_PGML_HINT
Rozdíl doby [`T`] za kolik skládá člověk z modelu kostku a hranice jeho schopností je  [`(T-[$T0])`]. Tomuto rozdílu je úměrná rychlost, s níž klesá doba [`T`] nutná ke složení kostky.
END_PGML_HINT


BEGIN_PGML_SOLUTION
Rozdíl doby [`T`] za kolik skládá člověk z modelu kostku a hranice jeho schopností je  [`(T-[$T0])`]. Tomuto rozdílu je úměrná rychlost, s níž klesá doba [`T`] nutná ke složení kostky.
Tedy
[``` \frac{\mathrm dT}{\mathrm dt}=[$r1].```]
END_PGML_SOLUTION

COMMENT('Používá PGML.');


ENDDOCUMENT();


