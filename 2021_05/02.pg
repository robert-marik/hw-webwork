DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "VectorField2D.pl",
  "PGML.pl",
  "unionTables.pl",
  "PGcourse.pl"
);

$refreshCachedImages=1;


Context("Numeric")->variables->are(x=>"Real",y=>"Real");


foreach my $i (0..5) {
  $gr[$i] = init_graph(-5,-5,5,5,grid=>[10,10],axes=>[0,0],pixels=>[400,400]);
  $gr[$i]->lb('reset');
#  foreach my $j (1..4) {
#    $gr[$i]->lb( new Label(-4.7,  $j, $j,'black','center','middle'));
#    $gr[$i]->lb( new Label(-4.7, -$j,-$j,'black','center','middle'));
#    $gr[$i]->lb( new Label(  $j,-4.7, $j,'black','center','middle'));
#    $gr[$i]->lb( new Label( -$j,-4.7,-$j,'black','center','middle'));
#  }
  $gr[$i]->lb( new Label(4.7,0.2,'x','black','center','middle'));
  $gr[$i]->lb( new Label(0.2,4.7,'y','black','center','middle'));
  $gr[$i]->new_color("lightblue", 214,230,244); # RGB
  $gr[$i]->new_color("darkblue",  100,100,255);
  $gr[$i]->new_color("lightgreen",156,215,151); 
  $gr[$i]->new_color("darkgreen",   0, 86, 34);
  $gr[$i]->new_color("lightred",245,234,229); # light red-purple
  $gr[$i]->new_color("darkred", 159, 64, 16); # red-brown
  $gr[$i]->new_color("nicegreen",0,110,0);
}

############

# F = grad( (x^2 + y^2)/2 )
VectorField2D(
graphobject => $gr[0],
Fx => Formula("x"),
Fy => Formula("y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach $k (5,10,15,20,25,30,35,40,45) {
  my $a = sqrt($k);
  my $fn = new Fun( sub { my $t=shift(); return $a * cos($t); }, sub { my $t=shift(); return $a * sin($t);}, $gr[3] );
  $fn->domain(0,6.3);
  $fn->color("darkred");
}


##########################

# F = grad( (x^2-y^2)/2 )
VectorField2D(
graphobject => $gr[1],
Fx => Formula("x"),
Fy => Formula("-y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach my $k (0,5,10,15,20,25) {
  # left and right branches
  $fn = new Fun( sub { my $t=shift(); return sqrt($k+$t**2); }, sub { my $t=shift(); return $t;}, $gr[4] );
  $fn->domain(-5,5);
  $fn->color("darkred");
  $fn = new Fun( sub { my $t=shift(); return -sqrt($k+$t**2); }, sub { my $t=shift(); return $t;}, $gr[4] );
  $fn->domain(-5,5);
  $fn->color("darkred");

  # top and bottom branches
  add_functions($gr[4],
  " sqrt(x^2+$k)  for x in <-5,5> using color:darkred and weight:2",
  "-sqrt(x^2+$k)  for x in <-5,5> using color:darkred and weight:2",
  );
}




#############################

# F = grad( xy )
VectorField2D(
graphobject => $gr[2],
Fx => Formula("y"),
Fy => Formula("x"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach my $k (5,10,15,20,25) {
  add_functions($gr[5],
  "$k/x  for x in <-5,-0.001> using color:darkred and weight:2",
  "$k/x  for x in <0.001,5> using color:darkred and weight:2",
  "-$k/x  for x in <-5,-0.001> using color:darkred and weight:2",
  "-$k/x  for x in <0.001,5> using color:darkred and weight:2",
  );
}
$gr[5]->moveTo(-5,0);
$gr[5]->lineTo(5,0,"darkred",2);
$gr[5]->moveTo(0,-5);
$gr[5]->lineTo(0,5,"darkred",2);




foreach my $i (0..2) {
  $vf[$i] = image(insertGraph($gr[$i]),width=>200,height=>200,tex_size=>310); 
  $contours[$i] = image(insertGraph($gr[$i+3]),width=>200,height=>200,tex_size=>310); 
}


@perm = shuffle(3);
@inv = invert(@perm);


#############################################
#  Main text

TEXT(beginproblem());


BEGIN_PGML
## Vektorové pole jako gradient

Některá vektorová pole je možno obdržet jako gradienty skalárních funkcí, tj. tato pole mají skalární potenciál (nebo, vyjádřeno matematickým jazykem, mají kmenovou funkci). To je případ vektorových polí na obrázku. Spárujte vektorové pole s obrázkem udávajícím vrstevnice odpovídajícího skalárního potenciálu.
Stačí se řídit vlastností, že gradient je kolmý k vrstevnicím.
END_PGML


BEGIN_TEXT
$BR
$BCENTER
\{
BeginTable().

AlignedRow([$vf[0],$vf[1],$vf[2]]).

TableSpace(5,0).

AlignedRow([ 
 "1. ".pop_up_list(["???","A","B","C"]),
 "2. ".pop_up_list(["???","A","B","C"]),
 "3. ".pop_up_list(["???","A","B","C"])
]).

TableSpace(26,5).

AlignedRow([
$contours[$perm[0]],
$contours[$perm[1]],
$contours[$perm[2]]
]).

TableSpace(5,0).

AlignedRow(["A","B","C"]).

EndTable();
\}
$BR
(Kliknutím na graf se graf zvětší v samostatném okně.)
$ECENTER
END_TEXT

##########################################
#  Answer evaluation

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS(str_cmp([@ALPHABET[@inv]]));


@letters=@ALPHABET[@inv];

BEGIN_SOLUTION
$PAR Řešení $BR $BR
Gradient je kolmý na vrstevnice. Řešení je tedy následující.
$BR
Pole 1. je gradientem funkce s vrstevnicemi na obrázku  $letters[0]. $BR
Pole 2. je gradientem funkce s vrstevnicemi na obrázku  $letters[1]. $BR
Pole 3. je gradientem funkce s vrstevnicemi na obrázku  $letters[2]. $BR
END_SOLUTION

ENDDOCUMENT();
