DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');

$u = Matrix([
[non_zero_random(-5,6,1)],
[non_zero_random(-5,6,1)],
[non_zero_random(-5,6,1)],
]);

$ut = $u->transpose;

$ans1 = $u * $ut;
$ans2 = $ut * $u;

Context()->texStrings;
BEGIN_PGML

## Maticové operace s vektorem

V tomto příkladě se zopakujeme maticový součin, zdůrazníme nekomutativitu a ukážeme si, jak jistý maticový součin  souvisí s délkou vektoru.

--------------

Vektor je možno také chápat jako matici. Řádkový vektor jako matici s jediným řádkem, sloupcový vektor jako matici s jediným sloupcem. Transpozice řádkového vektoru je sloupcový vektor a naopak. Operace jsou definovány stejně jako pro matice. Počítání je jednodušší, protože vektor má méně elementů než matice, ale v přílišné jednoduchosti někdy mohou být zádrhely. Pro konkrétnost, pokud pro sloupcový vektor [`v=\begin{pmatrix}2\\3\\-1\end{pmatrix}`] vypočteme součin [```v^T v= \begin{pmatrix}2 & 3 &-1\end{pmatrix} \begin{pmatrix}2\\3\\-1\end{pmatrix},```] dostaneme lineární kombinaci jednorozměrných vektorů (sloupce první matice) s koeficienty ve sloupci druhé matice, tj. [``` v^T v=(2\cdot 2 + 3\cdot 3 + (-1)\cdot (-1)) =(4+9+1)=(10).```] Pokud naopak vypočteme součin [```v v^T = \begin{pmatrix}2\\3\\-1\end{pmatrix} \begin{pmatrix}2 & 3 &-1\end{pmatrix}, ```] dostáváme extrémně jednoduché lineární kombinace jednoho sloupce. Tj. výsledekm je matice, kde všechny sloupce jsou násobkem vektoru [`v`] vždy s příslušnou komponentou. Tedy [```v v^T = \begin{pmatrix}2\\3\\-1\end{pmatrix} \begin{pmatrix}2 & 3 &-1\end{pmatrix} = \begin{pmatrix}2&6&-2\\6&9&-3\\-2&-3&1\end{pmatrix}. ```] Všimněte si, že jedna z matic degeneruje na číslo (*geometricky rovno druhé mocnině délky vektoru*) a druhá z matic je symetrická. 

----------------

Pro  vektor
[``` u = [$u] ```]
platí
>> [``||u||^2=u^T u ={}``][_________________]*{$ans2}<<
a
>> [``u u^T ={}``][_____]*{$ans1}.<<

END_PGML
Context()->normalStrings;

$showHint = 1;
BEGIN_PGML_HINT
Jedná se o klasické násobení matic. Někdy se však extrémně jednoduché zadání může (díky přílišné jednoduchosti) vzpírat snaze o vyřešení. Postupujte klasicky jak jste se učili násobit matice libovolné velikosti. Případně si ještě jednou prohlédněte řešený příklad nebo zkuste jiné zadání.
END_PGML_HINT

BEGIN_PGML_SOLUTION

Platí [```u^T u = ([$u->element(1,1)])\cdot([$u->element(1,1)]) + ([$u->element(2,1)])\cdot([$u->element(2,1)]) + ([$u->element(3,1)])\cdot([$u->element(3,1)])=[$ans2]```] a [```u u^T = [$ans1].```]

Slovně vyjádřeno, v prním případě počítáme součet druhých mocnin všech komponent a ve druhém případě počítáme násobky vektoru a umísťujeme je jako sloupce matice. Čísla, kterými násobíme, jsou postupně komponenty zadaného vektoru. Tento slovní popis plyne z obecného principu násobení matic.

END_PGML_SOLUTION


ENDDOCUMENT();
