diff --git a/lib/WeBWorK/ContentGenerator/Instructor/AchievementList.pm b/lib/WeBWorK/ContentGenerator/Instructor/AchievementList.pm
index 9ecc6e6f8..9b2690222 100644
--- a/lib/WeBWorK/ContentGenerator/Instructor/AchievementList.pm
+++ b/lib/WeBWorK/ContentGenerator/Instructor/AchievementList.pm
@@ -54,6 +54,7 @@ use WeBWorK::Debug;
 use WeBWorK::Utils qw(timeToSec readFile listFilesRecursive cryptPassword sortAchievements);
 use DateTime;
 use Text::CSV;
+use Encode;
 
 #constants for forms and the various handlers
 use constant BLANK_ACHIEVEMENT => "blankachievement.at";
@@ -594,7 +595,7 @@ sub score_handler {
 	    my $user_id = $userRecord->user_id;
 	    next unless $db->existsGlobalUserAchievement($user_id);
 	    next if ($userRecord->{status} eq 'D' || $userRecord->{status} eq 'A');
-	    print SCORE "$user_id, $userRecord->{last_name}, $userRecord->{first_name}, $userRecord->{section}, ";
+	    print SCORE Encode::encode("UTF-8","$user_id, $userRecord->{last_name}, $userRecord->{first_name}, $userRecord->{section}, ");
 	    my $globalUserAchievement = $db->getGlobalUserAchievement($user_id);
 	    my $level_id = $globalUserAchievement->level_achievement_id;
 	    $level_id = ' ' unless $level_id;
@@ -803,7 +804,7 @@ sub import_handler {
 	
 	#open file name
 	my $fh;
-	open $fh, "$filePath" or return CGI::div({class=>"ResultsWithError"}, $r->maketext("Failed to open [_1]",$filePath));
+	open ($fh,'<:encoding(UTF-8)',"$filePath") or return CGI::div({class=>"ResultsWithError"}, $r->maketext("Failed to open [_1]",$filePath));
 
 	#read in lines from file
 	my $count = 0;
@@ -979,7 +980,9 @@ sub saveExport_handler {
 			$achievement->max_counter,
 			$achievement->test,
 			$achievement->icon,];
-
+            # Fix for UTF-8 characters in the name and the description of the achivements
+	    $$line[1] = Encode::encode("UTF-8","$$line[1]"); 
+	    $$line[5] = Encode::encode("UTF-8","$$line[5]");
 	    warn("Error Exporting Achievement ".$achievement->achievement_id)
 		unless $csv->print($fh, $line);
 	}
