##################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;
$showHint = 1;

##################
#  Setup

Context("Matrix");

$A = Matrix([
[random(-3,3,1),random(-3,2,1),random(-3,5,1)],
[random(-3,2,1),random(-3,4,1),random(-3,5,1)],
[random(-3,2,1),random(-3,4,1),random(-3,4,1)],
]);

$B = Matrix([
[non_zero_random(-3,3)],
[random(0,2,1)],
[non_zero_random(-3,3,1)],
]);

$AA = Matrix([
[3,2,1],
[2,1,-1],
[0,3,0],
]);

$BB = Matrix([
[2],
[-1],[3]
]);

$answer = $A * $B;
$answerr = $AA * $BB;


##################
#  Main text

BEGIN_PGML

## Součin matice a vektoru

Součin čtvercové matice [`A`] a sloupcového vektoru [`\vec b`] je možno chápat jako jakési zobrazení množiny vektorů do sebe. Výsledkem je tedy opět sloupcový vektor. Jeho souřadnice dostaneme jako lineární kombinaci sloupců matice [`A`]. Koeficienty v této lineární kombinaci jsou souřadnice vektoru [`\vec b`].
Například platí
[```[$AA] [$BB] = [$answerr]```]
a výsledný vektor kombinací sloupců matice stojící v maticovém součinu vlevo: je dvojnásobek prvního sloupce minus druhý sloupec matice plus trojnásobek posledního sloupce. Vskutku,
[``` 2\begin{pmatrix}[$AA->element(1,1)]\\[$AA->element(2,1)]\\[$AA->element(3,1)]\end{pmatrix}-\begin{pmatrix}[$AA->element(1,2)]\\[$AA->element(2,2)]\\[$AA->element(3,2)]\end{pmatrix}+3\begin{pmatrix}[$AA->element(1,3)]\\[$AA->element(2,3)]\\[$AA->element(3,3)]\end{pmatrix}=\begin{pmatrix}[$answerr->element(1,1)]\\[$answerr->element(2,1)]\\[$answerr->element(3,1)]\end{pmatrix}.```]


Následující příklad je analogický. Z důvodů implementace v programu je matice ohraničena hranatými závorkami namísto závorek kulatých, což je pouze formalita. Odpověď se zapisuje pro každou komponentu samostatně a je tedy ve tvaru čísla nebo matematického výrazu, jehož výsledkem je číslo. Chcete-li se vyhnout "kupeckým počtům", můžete zapsat každou komponentu i jako součet, například v první komponentě můžete psát *7* nebo stejně dobře jako *2\*3-2+3*.

---------------

Je dána matice [``A``] a vektor [``\vec b``].
>> [``A = [$A] \ \ \mbox{a} \ \ \vec b = [$B]. ``] <<
Vypočtěte obraz vektoru [``\vec b``] při zobrazení reprezentovaném maticí [``A``]. Jinými slovy: vynásobte uvedené matice v požadovaném pořadí.

>>[`` A \vec b = {}``][_____]*{$answer}<<
END_PGML


########################
#  Solution

BEGIN_PGML_HINT
Výsledek je lineární kombinace sloupců matice [`A`] s koeficienty tvořenými komponentami vektoru [`\vec b`].
[``` [$B->element(1,1)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)] \\ [$A->element(3,1)]\end{pmatrix}
+
([$B->element(2,1)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)] \\ [$A->element(3,2)]\end{pmatrix}
+
([$B->element(3,1)])
\begin{pmatrix}[$A->element(1,3)] \\ [$A->element(2,3)] \\ [$A->element(3,3)]\end{pmatrix}
=\cdots
```]
END_PGML_HINT


BEGIN_PGML_SOLUTION
Výsledek je lineární kombinace sloupců matice [`A`] s koeficienty tvořenými komponentami vektoru [`\vec b`].
[``` [$B->element(1,1)]
\begin{pmatrix}[$A->element(1,1)] \\ [$A->element(2,1)] \\ [$A->element(3,1)]\end{pmatrix}
+
([$B->element(2,1)])
\begin{pmatrix}[$A->element(1,2)] \\ [$A->element(2,2)] \\ [$A->element(3,2)]\end{pmatrix}
+
([$B->element(3,1)])
\begin{pmatrix}[$A->element(1,3)] \\ [$A->element(2,3)] \\ [$A->element(3,3)]\end{pmatrix}
=
\begin{pmatrix}[$answer->element(1,1)] \\ [$answer->element(2,1)] \\ [$answer->element(3,1)]\end{pmatrix}
```]
END_PGML_SOLUTION


COMMENT('Uses PGML.');

ENDDOCUMENT();

