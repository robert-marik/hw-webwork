DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "VectorField2D.pl",
  "PGML.pl",
  'draggableSubsets.pl', 
  "PGcourse.pl"
);

#$refreshCachedImages=1;


Context("Numeric")->variables->are(x=>"Real",y=>"Real");


foreach my $i (0..5) {
  $gr[$i] = init_graph(-5,-5,5,5,grid=>[10,10],axes=>[0,0],pixels=>[400,400]);
  $gr[$i]->lb('reset');
#  foreach my $j (1..4) {
#    $gr[$i]->lb( new Label(-4.7,  $j, $j,'black','center','middle'));
#    $gr[$i]->lb( new Label(-4.7, -$j,-$j,'black','center','middle'));
#    $gr[$i]->lb( new Label(  $j,-4.7, $j,'black','center','middle'));
#    $gr[$i]->lb( new Label( -$j,-4.7,-$j,'black','center','middle'));
#  }
  $gr[$i]->lb( new Label(4.7,0.2,'x','black','center','middle'));
  $gr[$i]->lb( new Label(0.2,4.7,'y','black','center','middle'));
  $gr[$i]->new_color("lightblue", 214,230,244); # RGB
  $gr[$i]->new_color("darkblue",  100,100,255);
  $gr[$i]->new_color("lightgreen",156,215,151); 
  $gr[$i]->new_color("darkgreen",   0, 86, 34);
  $gr[$i]->new_color("lightred",245,234,229); # light red-purple
  $gr[$i]->new_color("darkred", 159, 64, 16); # red-brown
  $gr[$i]->new_color("nicegreen",0,110,0);
}

############

# F = grad( (x^2 + y^2)/2 )
VectorField2D(
graphobject => $gr[0],
Fx => Formula("x"),
Fy => Formula("y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach $k (5,10,15,20,25,30,35,40,45) {
  my $a = sqrt($k);
  my $fn = new Fun( sub { my $t=shift(); return $a * cos($t); }, sub { my $t=shift(); return $a * sin($t);}, $gr[3] );
  $fn->domain(0,6.3);
  $fn->color("darkred");
}


##########################

# F = grad( (x^2-y^2)/2 )
VectorField2D(
graphobject => $gr[1],
Fx => Formula("x"),
Fy => Formula("-y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach my $k (0,5,10,15,20,25) {
  # left and right branches
  $fn = new Fun( sub { my $t=shift(); return sqrt($k+$t**2); }, sub { my $t=shift(); return $t;}, $gr[4] );
  $fn->domain(-5,5);
  $fn->color("darkred");
  $fn = new Fun( sub { my $t=shift(); return -sqrt($k+$t**2); }, sub { my $t=shift(); return $t;}, $gr[4] );
  $fn->domain(-5,5);
  $fn->color("darkred");

  # top and bottom branches
  add_functions($gr[4],
  " sqrt(x^2+$k)  for x in <-5,5> using color:darkred and weight:2",
  "-sqrt(x^2+$k)  for x in <-5,5> using color:darkred and weight:2",
  );
}




#############################

# F = grad( xy )
VectorField2D(
graphobject => $gr[2],
Fx => Formula("y"),
Fy => Formula("x"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

foreach my $k (5,10,15,20,25) {
  add_functions($gr[5],
  "$k/x  for x in <-5,-0.001> using color:darkred and weight:2",
  "$k/x  for x in <0.001,5> using color:darkred and weight:2",
  "-$k/x  for x in <-5,-0.001> using color:darkred and weight:2",
  "-$k/x  for x in <0.001,5> using color:darkred and weight:2",
  );
}
$gr[5]->moveTo(-5,0);
$gr[5]->lineTo(5,0,"darkred",2);
$gr[5]->moveTo(0,-5);
$gr[5]->lineTo(0,5,"darkred",2);




foreach my $i (0..2) {
  $vf[$i] = image(insertGraph($gr[$i]),width=>200,height=>200,tex_size=>310); 
  $contours[$i] = image(insertGraph($gr[$i+3]),width=>200,height=>200,tex_size=>310); 
}


do
{
@perm = shuffle(3);
} until ( ($perm[0] != 0) ||  ($perm[1] != 1) || ($perm[2] != 2) );

#############################################
#  Main text

$draggable = DraggableSubsets(
[ 
$vf[0],
$vf[1],
$vf[2],
],
[
[0],
[1],
[2],
],
DefaultSubsets => [
{label => $contours[0], indices => [$perm[0]]},
{label => $contours[1], indices => [$perm[1]]},
{label => $contours[2], indices => [$perm[2]]},
],
AllowNewBuckets => 0,
OrderedSubsets => 1
);

BEGIN_PGML
## Vektorové pole jako gradient

Některá vektorová pole je možno obdržet jako gradienty skalárních funkcí, tj. tato pole mají skalární potenciál (nebo, vyjádřeno matematickým jazykem, mají kmenovou funkci). To je případ vektorových polí na obrázku. Spárujte vektorové pole s obrázkem udávajícím vrstevnice odpovídajícího skalárního potenciálu.
Stačí se řídit vlastností, že gradient je kolmý k vrstevnicím.

Vektorová pole jsou pohyblivá a je možné je přesouvat myší. Přesuňte je pod správné obrázky s vrstevnicemi.

[_]{$draggable}


END_PGML

BEGIN_PGML_SOLUTION
Představte si graf vrtevnic a vektorové pole položiné na sobě a dívejte se, zda vektory jsou kolmé k vrstevnicím.

[@ $vf[0] @]* [@ $contours[0] @]* 

---

[@ $vf[1] @]* [@ $contours[1] @]*

---

[@ $vf[2] @]* [@ $contours[2] @]* 

---

END_PGML_SOLUTION


ENDDOCUMENT();
