DOCUMENT();

loadMacros(
  "PGstandard.pl",
   "PGchoicemacros.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGML.pl",
  "VectorField2D.pl",
  'draggableSubsets.pl', 
  "PGcourse.pl"
);

#$refreshCachedImages=1;

#SRAND($psvn);

############################################
#  Setup

$size = [250,250];   # the size of the images
$tsize = 310;        # tex size of the images


Context("Numeric")->variables->are(x=>"Real",y=>"Real");

foreach my $i (0..2) {
  $gr[$i] = init_graph(-5,-5,5,5,grid=>[10,10],axes=>[0,0],pixels=>[400,400]);
  $gr[$i]->lb('reset');
  foreach my $j (1..4) {
    $gr[$i]->lb( new Label(-4.7,  $j, $j,'black','center','middle'));
    $gr[$i]->lb( new Label(-4.7, -$j,-$j,'black','center','middle'));
    $gr[$i]->lb( new Label(  $j,-4.7, $j,'black','center','middle'));
    $gr[$i]->lb( new Label( -$j,-4.7,-$j,'black','center','middle'));
  }
  $gr[$i]->lb( new Label(4.7,0.2,'x','black','center','middle'));
  $gr[$i]->lb( new Label(0.2,4.7,'y','black','center','middle'));
  $gr[$i]->new_color("lightblue", 214,230,244); # RGB
  $gr[$i]->new_color("darkblue",  100,100,255);
  $gr[$i]->new_color("lightgreen",156,215,151); 
  $gr[$i]->new_color("darkgreen",   0, 86, 34);
  $gr[$i]->new_color("lightred",245,234,229); # light red-purple
  $gr[$i]->new_color("darkred", 159, 64, 16); # red-brown
  $gr[$i]->new_color("nicegreen",0,110,0);
}

# \vec{F} = <x,y>
VectorField2D(
graphobject => $gr[0],
Fx => Formula("x"),
Fy => Formula("y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

# \vec{G} = <-y,x>
VectorField2D(
graphobject => $gr[1],
Fx => Formula("-y"),
Fy => Formula("x"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);

# \vec{H} = <x,-y>
VectorField2D(
graphobject => $gr[2],
Fx => Formula("x"),
Fy => Formula("-y"),
xvar => "x",
yvar => "y",
xmin => -5,
xmax =>  5,
ymin => -5,
ymax =>  5,
xsamples => 10,
ysamples => 10,
vectorcolor => "blue",
vectorscale => 0.2,
vectorthickness => 2,
xavoid=>0,
yavoid=>0,
);



#
#  Array of functions and their associated GIFs or PNGs
#

foreach my $i (0..2) {
  $grI[$i] = image(insertGraph($gr[$i]),width=>200,height=>200,tex_size=>310); 
}

@a = (
"\(\displaystyle \vec{F}(x,y) = x\vec{i} + y\vec{j} \)", 
"$grI[0]", 
"\(\displaystyle \vec{G}(x,y) = -y\vec{i} + x\vec{j} \)",
"$grI[1]", 
"\( \vec{H}(x,y) = x\vec{i} - y\vec{j} \)",
"$grI[2]", 
);

do
{
@perm = shuffle(3);
} until ( ($perm[0] != 0) ||  ($perm[1] != 1) || ($perm[2] != 2) );



@i = ($a[1],$a[3],$a[5]);
@l = ($a[0],$a[2],$a[4]);

$draggable = DraggableSubsets(
[ 
$i[0],
$i[1],
$i[2],
],
[
[0],
[1],
[2],
],
DefaultSubsets => [
{label => $l[0], indices => [$perm[0]]},
{label => $l[1], indices => [$perm[1]]},
{label => $l[2], indices => [$perm[2]]},
],
AllowNewBuckets => 0,
OrderedSubsets => 1
);


###############################################
#  Main text


BEGIN_PGML
## Graf vektorového pole

Spárujte grafy s analytickými předpisy vektorových polí.

Příklad postupu:

* Vyberte si body s jednoduchými souřadnicemi, například [`(1,0)`], [`(0,1)`] a [`(1,1)`].
* Vypočtěte odpovídající vektor v daném bodě.
* Podle znaménka komponent poznáte, kterým směrem vektor míří.
    * Vodorovný vektor má první komponentu nulovou.
    * Svislý vektor má druhou komponentu nulovou.
    * Vektor mířící doprava dolů má první komponentu kladnou a druhou zápornou.
    * ... atd.

[_]{$draggable}

END_PGML

BEGIN_PGML_SOLUTION

Vektorové pole [` \vec F = x\vec i+y\vec j`] míří od středu. Vektorové pole [` \vec G = -y\vec i+x\vec j`] rotuje proti směru hodinových ručiček. Zbylé vektorové pole odpovídá třetí možnosti.
END_PGML_SOLUTION

ENDDOCUMENT();
